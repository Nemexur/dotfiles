#!/usr/bin/env bash

script_name=$(basename "${BASH_SOURCE[0]}")
args=(ADDR)

usage() {
    ssh_options=$(mktemp)
    ssh &> "${ssh_options}"
	cat <<EOF
SSH into a remote machine in a separate tmux session.

USAGE: ${script_name} [OPTIONS] ${args[*]} [SSH_OPTIONS...]

OPTIONS:
  -h, --help    Print help.

SSH_OPTIONS:
$(cat "${ssh_options}")
EOF
    rm "${ssh_options}"
	exit
}

msg() {
	echo >&2 -e "${1-}"
}

die() {
	local msg=$1
	local code=${2-1}
	msg "${script_name}: ${msg}"
	exit "${code}"
}

parse_params() {
	while :; do
		case "${1-}" in
		-h | --help) usage ;;
		-?*) die "Unknown option: $1" ;;
		*) break ;;
		esac
		shift
	done
	argv=("$@")
	paste <(tr " " "\n" <<<"${args[@]}") <(tr " " "\n" <<<"${argv[@]:-""}") | grep -v '^\t' |
		while read -r arg value; do
			if [ -z "${value}" ]; then
				die "Missing argument: ${arg}"
			fi
		done
	return 0
}

switch_to() {
	if [[ -z "${TMUX}" ]]; then
		tmux attach-session -t "$1"
	else
		tmux switch-client -t "$1"
	fi
}

has_session() {
	tmux list-sessions | grep -q "^$1:"
}

parse_params "$@"

ssh_addr="${argv[0]}"
ssh_options=("${argv[@]:1}")

session_name=$(tr . _ <<<"ssh-${ssh_addr}")
tmux_running=$(pgrep tmux)

if [[ -z "${TMUX}" ]] && [[ -z "${tmux_running}" ]]; then
	tmux new-session -s "${session_name}" "ssh ${ssh_options[*]:-""} ${ssh_addr}"
	exit 0
fi

if ! has_session "${session_name}"; then
	tmux new-session -ds "${session_name}" "ssh ${ssh_options[*]:-""} ${ssh_addr}"
fi

switch_to "${session_name}"
