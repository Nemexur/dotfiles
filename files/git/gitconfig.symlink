# Local/private config goes in the include
[include]
  path = ~/.gitconfig.personal
[includeIf "gitdir:~/Projects/work/"]
  path = ~/.gitconfig.work

[hub]
  protocol = https
[alias]
  co                = checkout
  promote           = !$ZSH/bin/git-promote
  wtf               = !$ZSH/bin/git-wtf
  rank-contributors = !$ZSH/bin/git-rank-contributors
  count             = shortlog -sn
  undo              = reset --soft HEAD~
  amend             = commit --amend
  glog              = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
[color]
  diff   = auto
  status = auto
  branch = auto
  ui     = true
[core]
  pager        = bat
  excludesfile = ~/.gitignore
  editor       = vim
[apply]
  whitespace = nowarn
[mergetool]
  # Clean up backup files created by merge tools on tool exit
  keepBackup = false
  # Clean up temp files created by merge tools on tool exit
  keepTemporaries = false
  # Put the temp files in a dedicated dir anyway
  writeToTemp = true
  # Auto-accept file prompts when launching merge tools
  prompt = false
[difftool]
  prompt = false
[help]
  autocorrect = 1
[fetch]
  prune = true
[merge]
  # Disable fast-forward merges as default merge strategy.
  # Force explicit call of `git merge --ff â€¦`.
  ff = false
[pull]
  rebase = true
[push]
  default = simple
[rebase]
  # Rebase advanced usage.
  # Automagically reorder and prefix your commands while doing an interactive
  # rebase. This has to be used with `--fixup` and/or `--squash` options for
  # `git commit`.
  autoSquash = true
  # Automatically stash current WD and stage when running rebase
  # then you won't have to manually `git stash push` and `git stash pop`
  # after and before your rebase.
  autoStash = true
[status]
  # Display submodule rev change summaries in status
  submoduleSummary = true
  # Recursively traverse untracked directories to display all contents
  showUntrackedFiles = all
