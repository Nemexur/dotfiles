{
    "workbench.activityBar.visible": true,
    "workbench.colorTheme": "Dracula Soft",
    "workbench.sideBar.location": "left",
    "editor.fontFamily": "JetBrains Mono",
    "workbench.iconTheme": "material-icon-theme",
    "editor.renderWhitespace": "all",
    "editor.renderControlCharacters": false,
    "editor.formatOnPaste": true,
    "editor.wordWrap": "off",
    "editor.wordWrapColumn": 150,
    "editor.scrollBeyondLastLine": false,
    "diffEditor.ignoreTrimWhitespace": false,
    /// Prettier
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    /// ESLint
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    // Environment Settings
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.fontFamily": "Hack Nerd Font",
    "terminal.integrated.fontSize": 11,
    "workbench.startupEditor": "newUntitledFile",
    "typescript.check.npmIsInstalled": false,
    "git.autofetch": true,
    // Color Override
    "workbench.colorCustomizations": {
        "activityBarBadge.background": "#E86100",
        "list.activeSelectionForeground": "#E86100",
        "list.inactiveSelectionForeground": "#E86100",
        "list.highlightForeground": "#E86100",
        "scrollbarSlider.activeBackground": "#E8610050",
        "editorSuggestWidget.highlightForeground": "#E86100",
        "textLink.foreground": "#E86100",
        "progressBar.background": "#E86100",
        "pickerGroup.foreground": "#E86100",
        "tab.activeBorder": "#E86100",
        "notificationLink.foreground": "#E86100",
        "editorWidget.resizeBorder": "#E86100",
        "editorWidget.border": "#E86100",
        "settings.modifiedItemIndicator": "#E86100",
        "settings.headerForeground": "#E86100",
        "panelTitle.activeBorder": "#E86100",
        "breadcrumb.activeSelectionForeground": "#E86100",
        "menu.selectionForeground": "#E86100",
        "menubar.selectionForeground": "#E86100"
    },
    // Material Theme/Icon
    "materialTheme.accent": "Indigo",
    "material-icon-theme.folders.theme": "classic",
    // Latex Setup
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-utilities.countWord.format": "${words} Words",
    // Spelling settings
    "cSpell.language": "en,ru",
    "jsonnet.executablePath": "",
    // Files settings
    "files.insertFinalNewline": true,
    "files.associations": {
        "*.rmd": "markdown",
        "*.toml": "ini",
        "Pipfile": "ini",
        ".ansible-lint": "yaml"
    },
    // Docstring settings
    "autoDocstring.docstringFormat": "numpy",
    "autoDocstring.generateDocstringOnEnter": true,
    "autoDocstring.guessTypes": true,
    "autoDocstring.startOnNewLine": true,
    "autoDocstring.quoteStyle": "\"\"\"",
    // Highlight TODO, FIXME
    "todo-tree.general.statusBar": "total",
    "todo-tree.highlights.defaultHighlight": {
        "icon": "gear",
        "iconColour": "green"
    },
    "todo-tree.highlights.customHighlight": {
        "TODO": {
            "icon": "pin",
            "type": "text-and-comment",
            "foreground": "green",
            "opacity": 20,
            "iconColour": "orange"
        },
        "FIXME": {
            "icon": "tools",
            "type": "text-and-comment",
            "foreground": "yellow",
            "opacity": 20,
            "iconColour": "yellow"
        }
    },
    "todo-tree.filtering.ignoreGitSubmodules": true,
    "todo-tree.filtering.useBuiltInExcludes": "file excludes",
    "todo-tree.filtering.excludeGlobs": [
        "**/.venv/**",
        "**/.vscode/**"
    ],
    // Vim VSCode
    /// EasyMotion
    "vim.smartRelativeLine": true,
    "vim.enableNeovim": true,
    "vim.neovimUseConfigFile": true,
    "vim.easymotion": true,
    "vim.easymotionDimBackground": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": false,
    "vim.debug.silent": true,
    "vim.leader": "<space>",
    "vim.sneak": true,
    "vim.camelCaseMotion.enable": true,
    "vim.replaceWithRegister": true,
    "vim.normalModeKeyBindings": [
        {
            "before": ["<leader>", "u"],
            "after": ["<C-r>"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-n>"],
            "commands": [":nohl"]
        },
        {
            "before": ["Z", "Z"],
            "commands": [":wq"]
        },
        {
            "before": ["<leader>", "o"],
            "after": ["o", "<Esc>"]
        }
    ],
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-f>": false
    },
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "NOTE",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "editor.tabSize": 4,
    "editor.cursorStyle": "line",
    "editor.insertSpaces": true,
    "editor.lineNumbers": "on",
    "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    // Code-Runner
    "code-runner.clearPreviousOutput": true,
    "code-runner.executorMap": {
        "python": "$pythonPath -u $fullFileName",
        "go": "go run"
    },
    // Pylance
    "python.languageServer": "Jedi",
    "python.analysis.typeCheckingMode": "basic",
    // Go
    "go.docsTool": "godoc",
    "gopls": {
        "ui.semanticTokens": true,
        "ui.diagnostic.staticcheck": true
    },
    // Specific language settings
    "[python]": {
        // Controls if quick suggestions should show up while typing
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": false
        },
        // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
        "editor.acceptSuggestionOnEnter": "on",
        // Controls the delay in ms after which quick suggestions will show up.
        "editor.quickSuggestionsDelay": 10,
        // Controls if suggestions should automatically show up when typing trigger characters
        "editor.suggestOnTriggerCharacters": true,
        // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
        "editor.tabCompletion": "on",
        // Controls whether sorting favours words that appear close to the cursor
        "editor.suggest.localityBonus": true,
        // Controls how suggestions are pre-selected when showing the suggest list
        "editor.suggestSelection": "recentlyUsed",
        // Enable word based suggestions
        "editor.wordBasedSuggestions": true,
        // Enable parameter hints
        "editor.parameterHints.enabled": true,
        // AutoComplete Brackets
        "editor.autoClosingBrackets": "languageDefined",
        // Disable semantic highlighting for Pylance
        "editor.semanticHighlighting.enabled": false
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.autoClosingBrackets": "always"
    },
    "[latex]": {
        "editor.autoClosingBrackets": "never"
    },
    "[go]": {
        "editor.formatOnSave": true,
        "editor.snippetSuggestions": "none",
        "editor.defaultFormatter": "golang.go",
        "editor.insertSpaces": false,
        "editor.autoClosingBrackets": "languageDefined",
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    "[go.mod]": {
        "editor.formatOnPaste": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    "docker.explorerRefreshInterval": 5000,
    "go.toolsManagement.autoUpdate": true
}
