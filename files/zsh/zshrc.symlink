# Path to your oh-my-zsh installation oh-my-zsh specific settings
export ZSH=~/.oh-my-zsh
export _ZSH=~/.dotfiles
export TERM=xterm-256color
source $ZSH/oh-my-zsh.sh

# ZSH Customization Settings
ZSH_THEME="robbyrussell"

# fix pasting speed
# ref https://github.com/zsh-users/zsh-autosuggestions/issues/238
zstyle ':bracketed-paste-magic' active-widgets '.self-*'

# Default username to hide "user@hostname" info
DEFAULT_USER="$(whoami)"

# Disable autocorrect
unsetopt correct_all

# all of our zsh files
typeset -U config_files
config_files=($_ZSH/files/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  sudo
  git
  history
  web-search
  copypath
  copyfile
  dirhistory
  thefuck
  zsh-interactive-cd
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting
)

# User configuration

# Set Open Files limits
ulimit -n 200000
ulimit -u 2048

# Useful Key Bindings
bindkey -s '^f' 'cd_with_fzf^M'
bindkey -s '^b' 'brew_install^M'
bindkey -s '^g' 'pass_with_fzf^M'

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'

# Use `bat` for MANPAGE
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

#---- CUSTOM ----
source $ZSH/oh-my-zsh.sh

# autoload ----------------------------------------------------------------------
autoload -Uz vcs_info 
autoload -Uz colors && colors
autoload -U compinit && compinit
# Load once again
source $_ZSH/files/system/aliases.zsh

# syntax highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)

#styles
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[function]=fg=magenta,bold
ZSH_HIGHLIGHT_STYLES[command]=fg=green
ZSH_HIGHLIGHT_STYLES[precommand]=fg=green
ZSH_HIGHLIGHT_STYLES[alias]=fg=green
ZSH_HIGHLIGHT_STYLES[builtin]=fg=green
#path
ZSH_HIGHLIGHT_STYLES[path]=fg=cyan,underline
ZSH_HIGHLIGHT_STYLES[path_prefix]=fg=cyan
ZSH_HIGHLIGHT_STYLES[path_approx]=fg=cyan
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=240


#---- Export ----
export PATH=$PATH:/Users/a.n.milogradskiy/bin
export GOPATH=~/go 
export PATH=$GOPATH/bin:$PATH
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:/usr/local/bin/node
export PATH="/usr/local/opt/node@8/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export MONGO_PATH=/usr/local/mongodb 
export PATH=$PATH:$MONGO_PATH/bin
export CDPATH=.:$HOME:$GOROOT/src:$GOPATH/src/golang.org:$GOPATH/src/github.com
export LIBFM_PATH=$HOME/Projects/libfm/bin/

#---- End Export ----

#---- Source ----
[ -f ~/bin/fubectl.source ] && source ~/bin/fubectl.source
source <(kubectl completion zsh)
source $(dirname $(gem which colorls))/tab_complete.sh
#---- End Source ----

#---- PyEnv setup ----
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
if [ -n "$PYENV_COMMAND" ] && [ ! -x "$PYENV_COMMAND_PATH" ]; then
  versions=($(pyenv-whence "${PYENV_COMMAND}" 2>/dev/null || true))
  if [ "${#versions[@]}" -eq 1 ]; then
    PYENV_COMMAND_PATH="${PYENV_ROOT}/versions/${versions[0]}/bin/${PYENV_COMMAND}"
  fi
fi
#---- End Pyenv setup ----
#---- END CUSTOM ----
eval "$(pyenv init -)"
# Load Shell integration for iTerm
source ~/.iterm2_shell_integration.zsh

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/vault vault

# The next line updates PATH for Yandex Cloud CLI.
if [ -f '/Users/a.n.milogradskiy/yandex-cloud/path.bash.inc' ]; then source '/Users/a.n.milogradskiy/yandex-cloud/path.bash.inc'; fi

# The next line enables shell command completion for yc.
if [ -f '/Users/a.n.milogradskiy/yandex-cloud/completion.zsh.inc' ]; then source '/Users/a.n.milogradskiy/yandex-cloud/completion.zsh.inc'; fi

# TheFuck setup
eval $(thefuck --alias)

# Zoxide
eval "$(zoxide init zsh)"

# Perl
eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"
