---
- name: Collect symlink files.
  ansible.builtin.command: "find -H {{ dotfiles_files }} -maxdepth 2 -name '*.symlink' -not -path '*.git'"
  register: symlink_files
  failed_when: false
  check_mode: false
  changed_when: false

- name: Ensure all configured dotfiles are links.
  ansible.builtin.command: >-
    ls -F
    {% if 'dest' in item %}
    "{{ item.dest }}"
    {% else %}
    "{{ home_prefix }}/.{{ item.split('/')[-1] | replace('.symlink', '') }}"
    {% endif %}
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ symlink_files.stdout_lines + symlink_specific_files }}"

- name: Remove existing dotfiles file if a replacement is being linked.
  ansible.builtin.file:
    path: "{{ item.cmd[-1] }}"
    state: absent
  when: "'@' not in item.stdout"
  with_items: "{{ existing_dotfile_info.results }}"

- name: Link dotfiles.
  ansible.builtin.file:
    src: "{{ item.src | default(item) }}"
    dest: "{% if 'dest' in item %}\
      {{ item.dest }}\
      {% else %}\
      {{ home_prefix }}/.{{ item.split('/')[-1] | replace('.symlink', '') }}\
      {% endif %}"
    state: link
    mode: 0755
  become: no
  with_items: "{{ symlink_files.stdout_lines + symlink_specific_files }}"
